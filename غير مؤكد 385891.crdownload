#!/usr/bin/env python
# coding: utf-8

# Marwah jamaah AL-johany
# 
# 4150893
# 
# F5
# 
# ASSIGNMENT : Information Visualization in Information  Retrieval 
# 

# # ------------------------------------------------------------------------------------------------

# # generates a word cloud for English text

# In[1]:


pip install wordcloud


# In[11]:


#import the necessary libraries
from wordcloud import WordCloud
import matplotlib.pyplot as plt
# sample data
Data = "Word clouds visually represent the frequency or importance of words in a text corpus ,They are created by displaying words in different sizes and colors, with larger and more prominent words indicating higher frequency or importance. "
# Create word cloud
Cloud_Setting = WordCloud(background_color='white',
                          stopwords=['and', 'the', 'is','they','in','of','or','a','are']).generate(Data)
# Display the generated word cloud
plt.imshow(Cloud_Setting)
#hide the axes and ticks.
plt.axis('off')
# Show the plot
plt.show()


# # ------------------------------------------------------------------------------------------------

# # generates a word cloud for Arabic text

# In[16]:


#import the necessary libraries
from wordcloud import WordCloud
import matplotlib.pyplot as plt
from arabic_reshaper import arabic_reshaper
from bidi.algorithm import get_display

# Arabic text data
Arabic_text = "كيف تستطيع أمّة أن تصنع مستقبلها وهي في قبضة ماضيها يعصرها عصراً حتى يستنفذ كل ذرة من طاقاتها ؟"
# Reshape and reorder Arabic text
reshaped_text = arabic_reshaper.reshape(Arabic_text)
text_display = get_display(reshaped_text)

# Create word cloud
wordCloud = WordCloud(font_path='C:/Users/marwa/Downloads/alfont_com_VEXA-thin.ttf',
                      background_color='white').generate(text_display)

# Display the generated word cloud
plt.imshow(wordCloud, interpolation='bilinear')
plt.axis('off')

# Show the plot
plt.show()


# # ------------------------------------------------------------------------------------------------

# # generates a scatter plot using the matplotlib.pyplot library

# In[4]:


#import the necessary libraries
#matplotlib.pyplot as plt for creating plots, and numpy as np for generating random data.
import matplotlib.pyplot as plt
import numpy as np
#ensures that the random numbers generated for the x, y ,colors
#and sizes arrays will be the same each time the code is executed 
np.random.seed(0)
#generates an array of 400 random numbers from a standard normal distribution for both x and y coordinates. 
x = np.random.randn(400)
y = np.random.randn(400)
colors = np.random.rand(400)
#generate an array of random integers (lower ,upper,size )
sizes = np.random.randint(10, 40, 400)

# Create scatter plot
plt.scatter(x, y, c=colors, s=sizes, alpha=0.80, cmap='PiYG')

# Customize plot appearance
plt.title("random Scatter Plot visualization techniques")
plt.xlabel("X")
plt.ylabel("Y")
plt.grid(True)
# Show the plot
plt.show()


# # ------------------------------------------------------------------------------------------------
